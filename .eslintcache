[{"/Users/okamotoshun/Desktop/udemy_todo/src/App.tsx":"1","/Users/okamotoshun/Desktop/udemy_todo/src/reportWebVitals.ts":"2","/Users/okamotoshun/Desktop/udemy_todo/src/firebase.ts":"3","/Users/okamotoshun/Desktop/udemy_todo/src/index.tsx":"4","/Users/okamotoshun/Desktop/udemy_todo/src/TaskItem.tsx":"5"},{"size":1886,"mtime":1609227569593,"results":"6","hashOfConfig":"7"},{"size":425,"mtime":1609212496053,"results":"8","hashOfConfig":"7"},{"size":635,"mtime":1609217750491,"results":"9","hashOfConfig":"7"},{"size":478,"mtime":1609224037779,"results":"10","hashOfConfig":"7"},{"size":1401,"mtime":1609226747356,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"mivhiu",{"filePath":"14","messages":"15","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},"/Users/okamotoshun/Desktop/udemy_todo/src/App.tsx",["24"],"/Users/okamotoshun/Desktop/udemy_todo/src/reportWebVitals.ts",["25"],"import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","/Users/okamotoshun/Desktop/udemy_todo/src/firebase.ts",[],"/Users/okamotoshun/Desktop/udemy_todo/src/index.tsx",[],"/Users/okamotoshun/Desktop/udemy_todo/src/TaskItem.tsx",["26"],"import React, { useState } from 'react';\nimport styles from './TaskItem.module.css';\nimport * as firebase from 'firebase/app';\nimport { Grid, ListItem, TextField } from '@material-ui/core';\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\nimport DeleteOutlinedIcon from '@material-ui/icons/DeleteOutlined';\nimport { db } from './firebase';\n\ninterface Props {\n  id: string;\n  title: string;\n  // kye: string;\n}\n\nconst TaskItem: React.FC<Props> = (props) => {\n  const [title, setTitle] = useState(props.title);\n\n  const editTask = () => {\n    db.collection('tasks').doc(props.id).set({ title: title }, { merge: true });\n  };\n\n  const deleteTask = () => {\n    db.collection('tasks').doc(props.id).delete();\n  };\n  return (\n    <ListItem>\n      <h2>{props.title}</h2>\n      <Grid container justify='flex-end'>\n        <TextField\n          InputLabelProps={{\n            shrink: true,\n          }}\n          label='Edit task'\n          value={title}\n          onChange={(\n            e: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>\n          ) => setTitle(e.target.value)}\n        />\n      </Grid>\n      <button onClick={editTask} className={styles.taskitem__icon}>\n        <EditOutlinedIcon />\n      </button>\n      <button onClick={deleteTask} className={styles.taskitem__icon}>\n        <DeleteOutlinedIcon />\n      </button>\n    </ListItem>\n  );\n};\n\nexport default TaskItem;\n",{"ruleId":"27","severity":1,"message":"28","line":34,"column":20,"nodeType":"29","messageId":"30","endLine":34,"endColumn":70},{"ruleId":"31","severity":1,"message":"32","line":3,"column":25,"nodeType":"33","messageId":"34","endLine":3,"endColumn":57},{"ruleId":"27","severity":1,"message":"35","line":3,"column":13,"nodeType":"29","messageId":"30","endLine":3,"endColumn":21},"@typescript-eslint/no-unused-vars","'e' is defined but never used.","Identifier","unusedVar","@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","ArrowFunctionExpression","missingReturnType","'firebase' is defined but never used."]